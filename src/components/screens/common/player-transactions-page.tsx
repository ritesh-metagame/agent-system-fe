"use client";import {DataTable} from "@/components/tables/data-table";import {    superAdminTransactionsReportsListColumns,    SuperAdminTransactionsReportsListData,} from "@/components/tables/superadmin/download-reports/transactions-columns";import {Button} from "@/components/ui/button";import {DatePickerWithRange} from "@/components/ui/date-picker";import {TypographyH4} from "@/components/ui/typographyh4";import axios from "axios";import React, {useEffect} from "react";import {toast} from "sonner";type Props = {};export default function PlayerTransactionsPage({}: Props) {    const [dateRange, setDateRange] = React.useState<{        from: null | Date;        to: null | Date;    }>({        from: null,        to: null,    });    const [transactionsData, setTransactionsData] = React.useState<        SuperAdminTransactionsReportsListData[]    >([]);    function getStartOfDay(dateStr: string): Date {        const date = new Date(dateStr);        date.setHours(0, 0, 0, 0);        return date;    }    function getEndOfDay(dateStr: string): Date {        const date = new Date(dateStr);        date.setHours(23, 59, 59, 999);        return date;    }    function formatDateToISO(dateStr: string): string {        // Split DD/MM/YYYY        const [day, month, year] = dateStr.split('/').map(Number);        // Pad day/month if needed and return YYYY-MM-DD        return `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')}`;    }    const fetchPlayerTransactions = async () => {        try {            const startDate = formatDateToISO(new Date(dateRange.from).toLocaleDateString('en-IN', {                timeZone: "asia/kolkata",            }))            const endDate = formatDateToISO(new Date(dateRange.to).toLocaleDateString('en-IN', {                timeZone: "asia/kolkata",            }))            console.log("Start Date:", startDate);            console.log("End Date:", endDate);            const token = localStorage.getItem("token");            const {data} = await axios.get(                `${process.env.NEXT_PUBLIC_BASE_URL}/transactions/reports`,                {                    headers: {                        "Content-Type": "application/json",                        Authorization: `Bearer ${token}`,                    },                    params: {                        ...(dateRange.from && dateRange.to                            ? {                                startDate: startDate,                                endDate: endDate,                            }                            : {}),                    },                }            );            if (data.code === "T214") {                setTransactionsData(data.data);            } else {                toast(data.message || "Failed to fetch transactions.");            }        } catch (error) {            console.error("Error fetching player transactions:", error);        }    };    useEffect(() => {        fetchPlayerTransactions();    }, []);    useEffect(() => {        console.log("Date range changed:", dateRange);    }, [dateRange]);    return (        <div>            <div className="flex gap-2 mb-4">                <DatePickerWithRange date={dateRange} setDate={setDateRange}/>                <Button onClick={fetchPlayerTransactions}>Search</Button>            </div>            <div>                <TypographyH4 className="mb-4">Reports</TypographyH4>                <DataTable                    columns={superAdminTransactionsReportsListColumns}                    data={transactionsData}                    columnWidths={["150px", "150px", "150px", "150px"]} // Set the desired widths for each column                />            </div>        </div>    );}